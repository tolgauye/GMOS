%
% biber --tool --output_align --output_indent=2 --output_fieldcase=lower paper.bib
%
@misc{eigenweb,
  author       = {Guennebaud, Gaël and Jacob, Benoît and others},
  date         = {2010},
  howpublished = {\url{http://eigen.tuxfamily.org}},
  title        = {Eigen v3},
}

@misc{autodiff,
  author       = {Leal, Allan},
  date         = {2019},
  howpublished = {\url{https://github.com/autodiff/autodiff}},
  title        = {Autodiff},
}

@misc{autodifforg,
  author       = {Bücker, Martin and Hovland, Paul},
  date         = {2019},
  howpublished = {\url{http://www.autodiff.org}},
  title        = {autodiff.org},
}

@misc{spindrops,
  author       = {Tesch, Michael and Glaser, Niklas and Glaser, Steffen J.},
  date         = {2019},
  howpublished = {\url{https://spindrops.org/}},
  title        = {SpinDrops 2.0},
}

@inproceedings{openblas,
  address = {Denver, Colorado},
  author = {Wang, Qian and Zhang, Xianyi and Zhang, Yunquan and Yi, Qing},
  booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis ({SC13})},
  doi = {10.1145/2503210.2503219},
  isbn = {978-1-4503-2378-9},
  language = {en},
  pages = {1-12},
  publisher = {{ACM Press}},
  title = {{AUGEM}: Automatically Generate High Performance Dense Linear Algebra Kernels on {X86 CPUs}},
  year = {2013}
}

@incollection{FAD,
  abstract  = {This work deals with an implementation of automatic differentiation of C++ computer programs in forward mode using operator overloading and expression templates. In conjunction with a careful reuse of data, this technique also improves performance of programs involving linear algebra computations mixed or not with automatic differentiation. We give a broad view of implementation and explain some important concepts regarding code optimization. We conclude with some benchmarks applied to our optimal control software.},
  author    = {Aubert, Pierre and Di C{é}sar{é}, Nicolas},
  editor    = {Corliss, George and Faure, Christ{è}le and Griewank, Andreas and Hasco{ë}t, Laurent and Naumann, Uwe},
  location  = {New York, NY},
  publisher = {Springer},
  booktitle = {Automatic Differentiation of Algorithms: From Simulation to Optimization},
  chapter   = {37},
  crossref  = {Corliss2002ADo},
  doi       = {10.1007/978-1-4613-0075-5},
  date      = {2002},
  pages     = {311--315},
  series    = {Computer and Information Science},
  title     = {Expression Templates and Forward Mode Automatic Differentiation},
}

@misc{audi,
  abstract     = {Header only, C++ library (and the Python pyaudi package) implementing the algebra of Taylor truncated polynomials and a few algorithms useful for its applications (Differential Intelligence, automatic differentiation, Taylor Models, etc.)},
  author       = {Izzo, Dario and Biscani, Francesco and Sánchez, Carlos and Müller, Jörg and Heddes, Mike},
  date         = {2019-05},
  doi          = {10.5281/zenodo.2677671},
  howpublished = {Zenodo},
  shorttitle   = {Darioizzo/Audi},
  title        = {Darioizzo/Audi: {{Update}} Third Party Dependencies},
}

@inproceedings{adolc,
  author    = {Walther, Andrea},
  booktitle = {Combinatorial Scientific Computing},
  editor    = {Uwe Naumann and Olaf Schenk},
  publisher = {Chapman-Hall CRC Computational Science},
  year      = {2012},
  title     = {Getting started with {ADOL-C}},
  isbn      = {9781439827352},
}

@misc{ceres,
  author       = {Agarwal, Sameer and Mierle, Keir and others},
  howpublished = {\url{http://ceres-solver.org}},
  title        = {Ceres Solver},
}

