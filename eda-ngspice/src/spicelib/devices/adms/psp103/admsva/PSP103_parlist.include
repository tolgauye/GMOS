//======================================================================================
//======================================================================================
// Filename: PSP103_parlist.include
//======================================================================================
//======================================================================================
//
//  (c) Copyright notice
//
//  Since 2015 until today, PSP has been co-developed by NXP Semiconductors and
//  CEA-Leti. For this part of the model, each claim undivided ownership and copyrights
//  Since 2012 until 2015, PSP has been co-developed by NXP Semiconductors and
//  Delft University of Technology. For this part of the model, each claim undivided
//  ownership and copyrights
//  Until and including 2011, PSP has been co-developed by NXP Semiconductors and
//  Arizona State University. For this part of the model, NXP Semiconductors claims
//  undivided ownership and copyrights.
//
//
//  Version: 103.7.0 (PSP), 200.6.0 (JUNCAP), April 2019
//
//======================================================================================
//======================================================================================
//
// Further information can be found in the file releasenotesPSP103.txt
//
//  --------------------------------------------------------------------------------------------------------------
//  Special model parameters and switch parameters
//  --------------------------------------------------------------------------------------------------------------

//  Special model parameters, some are also simulator global variables
`MPInb(LEVEL          ,103        ,""                                   ,"Model level")
`MPIty(TYPE           ,1          ,""                                   ,"Channel type parameter, +1=NMOS -1=PMOS")

`MPIty(nmos           ,1          ,""                                   ,"MOS channel type")
`MPIty(pmos           ,1          ,""                                   ,"MOS channel type")
`MPRco(TR             ,21.0       ,"degC"     ,-273.0      ,inf         ,"nominal (reference) temperature")

//  Switch parameters that turn models or effects on or off
`MPIcc(SWGEO          ,1          ,""         ,0           ,2           ,"Flag for geometrical model, 0=local, 1=global, 2=binning")
`MPIcc(SWIGATE        ,0          ,""         ,0           ,2           ,"Flag for gate current: 0=off, 1=on, 2=on+overlaps-parameters")
`MPIcc(SWIMPACT       ,0          ,""         ,0           ,1           ,"Flag for impact ionization current, 0=turn off II")
`MPIcc(SWGIDL         ,0          ,""         ,0           ,1           ,"Flag for GIDL current, 0=turn off IGIDL")
`MPIcc(SWJUNCAP       ,0          ,""         ,0           ,3           ,"Flag for juncap, 0=turn off juncap")
`MPIcc(SWJUNASYM      ,0          ,""         ,0           ,1           ,"Flag for asymmetric junctions; 0=symmetric, 1=asymmetric")
`MPIcc(SWNUD          ,0          ,""         ,0           ,2           ,"Flag for NUD-effect; 0=off, 1=on, 2=on+CV-correction")
`MPIcc(SWEDGE         ,0          ,""         ,0           ,1           ,"Flag for drain current of edge transistors; 0=off, 1=on")
`MPIcc(SWDELVTAC      ,0          ,""         ,0           ,1           ,"Flag for separate capacitance calculation; 0=off, 1=on")
`MPIcc(SWQSAT         ,0          ,""         ,0           ,1           ,"Flag for separate capacitance calculation in saturation only: 0=off, 1=on")
`MPIcc(SWQPART        ,0          ,""         ,0           ,1           ,"Flag for drain/source charge partitioning; 0=linear distribution, 1=source")
`MPIcc(SWIGN          ,1          ,""         ,0           ,1           ,"Flag for induced gate noise; 0=off, 1=on")
`ifdef NQSmodel
    `MPIcc(SWNQS          ,0          ,""         ,0           ,9           ,"Flag for NQS, 0=off, 1, 2, 3, 5, or 9=number of collocation points")
`endif // NQSmodel
`MPRcz(QMC            ,1.0        ,""                                   ,"Quantum-mechanical correction factor")

//  --------------------------------------------------------------------------------------------------------------
//  PSP local model parameters
//  --------------------------------------------------------------------------------------------------------------

//  Process parameters
`MPRnb(VFB            ,-1.0       ,"V"                                  ,"Flat band voltage at TR")
`MPRnb(STVFB          ,5.0e-4     ,"V/K"                                ,"Temperature dependence of VFB")
`MPRnb(ST2VFB         ,0.0        ,"K^-1"                               ,"Quadratic temperature dependence of VFB")
`MPRco(TOX            ,2.0e-09    ,"m"        ,1.0e-10     ,inf         ,"Gate oxide thickness")
`MPRco(EPSROX         ,3.9        ,""         ,1.0         ,inf         ,"Relative permittivity of gate dielectric")
`MPRcc(NEFF           ,5.0e23     ,"m^-3"     ,1.0e20      ,1.0e26      ,"Effective substrate doping")
`MPRcz(FACNEFFAC      ,1.0        ,""                                   ,"Pre-factor for effective substrate doping in separate charge calculation")
`MPRco(GFACNUD        ,1.0        ,""         ,0.01        ,inf         ,"Body-factor change due to NUD-effect")
`MPRcz(VSBNUD         ,0.0        ,"V"                                  ,"Lower Vsb value for NUD-effect")
`MPRco(DVSBNUD        ,1.0        ,"V"        ,0.1         ,inf         ,"Vsb-range for NUD-effect")
`MPRnb(VNSUB          ,0.0        ,"V"                                  ,"Effective doping bias-dependence parameter")
`MPRco(NSLP           ,0.05       ,"V"        ,1.0e-3      ,inf         ,"Effective doping bias-dependence parameter")
`MPRcc(DNSUB          ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Effective doping bias-dependence parameter")
`MPRnb(DPHIB          ,0.0        ,"V"                                  ,"Offset parameter for PHIB")
`MPRnb(DELVTAC        ,0.0        ,"V"                                  ,"Offset parameter for PHIB in separate charge calculation")
`MPRcz(NP             ,1.0e26     ,"m^-3"                               ,"Gate poly-silicon doping")
`MPRco(TOXOV          ,2.0e-09    ,"m"        ,1.0e-10     ,inf         ,"Overlap oxide thickness")
`MPRco(TOXOVD         ,2.0e-09    ,"m"        ,1.0e-10     ,inf         ,"Overlap oxide thickness for drain side")
`MPRcc(NOV            ,5.0e25     ,"m^-3"     ,1.0e23      ,1.0e27      ,"Effective doping of overlap region")
`MPRcc(NOVD           ,5.0e25     ,"m^-3"     ,1.0e23      ,1.0e27      ,"Effective doping of overlap region for drain side")

//  Interface states parameters: PSP 103.6
`MPRcz(CT             ,0.0        ,""                                   ,"Interface states factor")
`MPRcz(CTG            ,0.0        ,""                                   ,"Gate voltage dependence of interface states factor")
`MPRnb(CTB            ,0.0        ,""                                   ,"Bulk voltage dependence of interface states factor")
`MPRnb(STCT           ,1.0        ,""                                   ,"Geometry-independent temperature dependence of CT")

//  DIBL parameters
`MPRcz(CF             ,0.0        ,""                                   ,"DIBL-parameter")
`MPRcz(CFAC           ,0.0         ,""                                   ,"DIBL-parameter of charge model when SWQSAT=1")
`MPRcz(CFD            ,0.0        ,"V^-1"                               ,"Drain voltage dependence of CF")
`MPRcc(CFB            ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Back bias dependence of CF")

//  Subthreshold slope parameters of short channel transistor
`MPRcz(PSCE           ,0.0        ,""                                   ,"Subthreshold slope coefficient for short channel transistor")
`MPRcc(PSCEB          ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of subthreshold slope coefficient for short channel transistor")
`MPRcz(PSCED          ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of subthreshold slope coefficient for short channel transistor")

//  Mobility parameters
`MPRcz(BETN           ,7.0e-2     ,"m^2/V/s"                            ,"Channel aspect ratio times zero-field mobility")
`MPRnb(STBET          ,1.0        ,""                                   ,"Temperature dependence of BETN")
`MPRcz(MUE            ,0.5        ,"m/V"                                ,"Mobility reduction coefficient at TR")
`MPRnb(STMUE          ,0.0        ,""                                   ,"Temperature dependence of MUE")
`MPRcz(THEMU          ,1.5        ,""                                   ,"Mobility reduction exponent at TR")
`MPRnb(STTHEMU        ,1.5        ,""                                   ,"Temperature dependence of THEMU")
`MPRcz(CS             ,0.0        ,""                                   ,"Coulomb scattering parameter at TR")
`MPRnb(STCS           ,0.0        ,""                                   ,"Temperature dependence of CS")
`MPRcz(THECS          ,2.0        ,""                                   ,"Coulomb scattering exponent at TR")
`MPRnb(STTHECS        ,0.0        ,""                                   ,"Temperature dependence of THECS")
`MPRcz(XCOR           ,0.0        ,"V^-1"                               ,"Non-universality factor")
`MPRnb(STXCOR         ,0.0        ,""                                   ,"Temperature dependence of XCOR")
`MPRcz(FETA           ,1.0        ,""                                   ,"Effective field parameter")

//  Series-resistance parameters (for resistance modeling as part of intrinsic mobility reduction)
`MPRcz(RS             ,30.0       ,"Ohm"                                ,"Series resistance at TR")
`MPRnb(STRS           ,1.0        ,""                                   ,"Temperature dependence of RS")
`MPRcc(RSB            ,0.0        ,"V^-1"     ,-0.5        ,1.0         ,"Back-bias dependence of series resistance")
`MPRco(RSG            ,0.0        ,"V^-1"     ,-0.5        ,inf         ,"Gate-bias dependence of series resistance")

//  Velocity saturation parameters
`MPRcz(THESAT         ,1.0        ,"V^-1"                               ,"Velocity saturation parameter at TR")
`MPRcz(THESATAC       ,1.0        ,"V^-1"                               ,"Velocity saturation parameter at TR of charge model when SWQSAT=1")
`MPRnb(STTHESAT       ,1.0        ,""                                   ,"Temperature dependence of THESAT")
`MPRcc(THESATB        ,0.0        ,"V^-1"     ,-0.5        ,1.0         ,"Back-bias dependence of velocity saturation")
`MPRco(THESATG        ,0.0        ,"V^-1"     ,-0.5        ,inf         ,"Gate-bias dependence of velocity saturation")

//  Saturation voltage parameters
`MPRco(AX             ,3.0        ,""         ,2.0         ,inf         ,"Linear/saturation transition factor")
`MPRco(AXAC           ,3.0        ,""         ,2.0         ,inf         ,"Linear/saturation transition factor of charge model when SWQSAT=1")

//  Channel length modulation (CLM) parameters
`MPRcz(ALP            ,0.01       ,""                                   ,"CLM pre-factor")
`MPRcz(ALPAC          ,0.01       ,""                                   ,"CLM pre-factor of charge model when SWQSAT=1")
`MPRcz(ALP1           ,0.0        ,"V"                                  ,"CLM enhancement factor above threshold")
`MPRcz(ALP2           ,0.0        ,"V^-1"                               ,"CLM enhancement factor below threshold")
`MPRco(VP             ,0.05       ,"V"        ,1.0e-10     ,inf         ,"CLM logarithm dependence factor")

//  Impact ionization (II) parameters
`MPRcz(A1             ,1.0        ,""                                   ,"Impact-ionization pre-factor")
`MPRcz(A2             ,10.0       ,"V"                                  ,"Impact-ionization exponent at TR")
`MPRnb(STA2           ,0.0        ,"V"                                  ,"Temperature dependence of A2")
`MPRcz(A3             ,1.0        ,""                                   ,"Saturation-voltage dependence of impact-ionization")
`MPRcz(A4             ,0.0        ,"V^-0.5"                             ,"Back-bias dependence of impact-ionization")

//  Gate current parameters
`MPRcc(GCO            ,0.0        ,""         ,-10.0       ,10.0        ,"Gate tunnelling energy adjustment")
`MPRcz(IGINV          ,0.0        ,"A"                                  ,"Gate channel current pre-factor")
`MPRcz(IGOV           ,0.0        ,"A"                                  ,"Gate overlap current pre-factor")
`MPRcz(IGOVD          ,0.0        ,"A"                                  ,"Gate overlap current pre-factor for drain side")
`MPRnb(STIG           ,2.0        ,""                                   ,"Temperature dependence of IGINV and IGOV")
`MPRcc(GC2            ,0.375      ,""         ,0.0         ,10.0        ,"Gate current slope factor")
`MPRcc(GC3            ,0.063      ,""         ,-2.0        ,2.0         ,"Gate current curvature factor")
`MPRcc(GC2OV          ,0.375      ,""         ,0.0         ,10.0        ,"Gate overlap current slope factor, used only when SWIGATE=2")
`MPRcc(GC3OV          ,0.063      ,""         ,-2.0        ,2.0         ,"Gate overlap current curvature factor, used only when SWIGATE=2")
`MPRco(CHIB           ,3.1        ,"V"        ,1.0         ,inf         ,"Tunnelling barrier height")

//  Gate Induced Drain/Source Leakage (GIDL) parameters
`MPRcz(AGIDL          ,0.0        ,"A/V^3"                              ,"GIDL pre-factor")
`MPRcz(AGIDLD         ,0.0        ,"A/V^3"                              ,"GIDL pre-factor for drain side")
`MPRcz(BGIDL          ,41.0       ,"V"                                  ,"GIDL probability factor at TR")
`MPRcz(BGIDLD         ,41.0       ,"V"                                  ,"GIDL probability factor at TR for drain side")
`MPRnb(STBGIDL        ,0.0        ,"V/K"                                ,"Temperature dependence of BGIDL")
`MPRnb(STBGIDLD       ,0.0        ,"V/K"                                ,"Temperature dependence of BGIDL for drain side")
`MPRnb(CGIDL          ,0.0        ,""                                   ,"Back-bias dependence of GIDL")
`MPRnb(CGIDLD         ,0.0        ,""                                   ,"Back-bias dependence of GIDL for drain side")

//  Charge model parameters
`MPRcz(COX            ,1.0e-14    ,"F"                                  ,"Oxide capacitance for intrinsic channel")
`MPRcz(CGOV           ,1.0e-15    ,"F"                                  ,"Oxide capacitance for gate-drain/source overlap")
`MPRcz(CGOVD          ,1.0e-15    ,"F"                                  ,"Oxide capacitance for gate-drain overlap")
`MPRcz(CGBOV          ,0.0        ,"F"                                  ,"Oxide capacitance for gate-bulk overlap")
`MPRcz(CFR            ,0.0        ,"F"                                  ,"Outer fringe capacitance")
`MPRcz(CFRD           ,0.0        ,"F"                                  ,"Outer fringe capacitance for drain side")

//  Noise parameters
`MPRcz(FNT            ,1.0        ,""                                   ,"Thermal noise coefficient")
`MPRcz(FNTEXC         ,0.0        ,""                                   ,"Excess noise coefficient")
`MPRcz(NFA            ,8.0e22     ,"V^-1/m^4"                           ,"First coefficient of flicker noise")
`MPRcz(NFB            ,3.0e07     ,"V^-1/m^2"                           ,"Second coefficient of flicker noise")
`MPRcz(NFC            ,0.0        ,"V^-1"                               ,"Third coefficient of flicker noise")
`MPRcz(EF             ,1.0        ,""                                   ,"Flicker noise frequency exponent")

// Edge transistor parameters: PSP 103.4
`MPRnb(VFBEDGE        ,-1.0       ,"V"                                  ,"Flat band voltage of edge transistors at TR")
`MPRnb(STVFBEDGE      ,5.0e-4     ,"V/K"                                ,"Temperature dependence of VFBEDGE")
`MPRnb(DPHIBEDGE      ,0.0        ,"V"                                  ,"Offset parameter for PHIB of edge transistors")
`MPRcc(NEFFEDGE       ,5.0e23     ,"m^-3"     ,1.0e20      ,1.0e26      ,"Effective substrate doping of edge transistors")
`MPRcz(CTEDGE         ,0.0        ,""                                   ,"Interface states factor of edge transistors")
`MPRcz(BETNEDGE       ,5.0e-4     ,"m^2/V/s"                            ,"Channel aspect ratio times zero-field mobility of edge transistor")
`MPRnb(STBETEDGE      ,1.0        ,""                                   ,"Temperature dependence of BETNEDGE")
`MPRcz(PSCEEDGE       ,0.0        ,""                                   ,"Subthreshold slope coefficient for short channel edge transistors")
`MPRcc(PSCEBEDGE      ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of subthreshold slope coefficient for short channel edge transistors")
`MPRcz(PSCEDEDGE      ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of subthreshold slope coefficient for short channel edge transistors")
`MPRcz(CFEDGE         ,0.0        ,""                                   ,"DIBL parameter of edge transistors")
`MPRcz(CFDEDGE        ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of DIBL-parameter of edge transistors")
`MPRcc(CFBEDGE        ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of DIBL-parameter of edge transistors")
`MPRcz(FNTEDGE        ,1.0        ,""                                   ,"Thermal noise coefficient of edge transistors")
`MPRcz(NFAEDGE        ,8.0e22     ,"V^-1/m^4"                           ,"First coefficient of flicker noise of edge transistors")
`MPRcz(NFBEDGE        ,3.0e07     ,"V^-1/m^2"                           ,"Second coefficient of flicker noise of edge transistors")
`MPRcz(NFCEDGE        ,0.0        ,"V^-1"                               ,"Third coefficient of flicker noise of edge transistors")
`MPRcz(EFEDGE         ,1.0        ,""                                   ,"Flicker noise frequency exponent of edge transistors")

//  NQS parameters
`ifdef NQSmodel
    `MPRcz(MUNQS          ,1.0        ,""                                   ,"Relative mobility for NQS modelling")
`endif // NQSmodel

// Parasitic resistance parameters
`MPRcz(RG             ,0.0        ,"Ohm"                                ,"Gate resistance")
`MPRcz(RSE            ,0.0        ,"Ohm"                                ,"External source resistance")
`MPRcz(RDE            ,0.0        ,"Ohm"                                ,"External drain resistance")
`MPRcz(RBULK          ,0.0        ,"Ohm"                                ,"Bulk resistance between node BP and BI")
`MPRcz(RWELL          ,0.0        ,"Ohm"                                ,"Well resistance between node BI and B")
`MPRcz(RJUNS          ,0.0        ,"Ohm"                                ,"Source-side bulk resistance between node BI and BS")
`MPRcz(RJUND          ,0.0        ,"Ohm"                                ,"Drain-side bulk resistance between node BI and BD")

// Self heating effect parameters
`ifdef SelfHeating
    `MPRcz(RTH            ,0.0        ,"K/W"                                ,"Thermal resistance")
    `MPRcz(CTH            ,0.0        ,"J/K"                                ,"Thermal capacitance")
    `MPRnb(STRTH          ,0.0        ,""                                   ,"Temperature sensitivity of RTH")
`endif // SelfHeating

//  --------------------------------------------------------------------------------------------------------------
//  PSP global model parameters
//  --------------------------------------------------------------------------------------------------------------

// Process Parameters
`MPRnb(LVARO          ,0.0        ,"m"                                  ,"Geom. independent difference between actual and programmed gate length")
`MPRnb(LVARL          ,0.0        ,""                                   ,"Length dependence of LVAR")
`MPRnb(LVARW          ,0.0        ,""                                   ,"Width dependence of LVAR")
`MPRnb(LAP            ,0.0        ,"m"                                  ,"Effective channel length reduction per side")
`MPRnb(WVARO          ,0.0        ,"m"                                  ,"Geom. independent difference between actual and programmed field-oxide opening")
`MPRnb(WVARL          ,0.0        ,""                                   ,"Length dependence of WVAR")
`MPRnb(WVARW          ,0.0        ,""                                   ,"Width dependence of WVAR")
`MPRnb(WOT            ,0.0        ,"m"                                  ,"Effective channel width reduction per side")
`MPRnb(DLQ            ,0.0        ,"m"                                  ,"Effective channel length reduction for CV")
`MPRnb(DWQ            ,0.0        ,"m"                                  ,"Effective channel width reduction for CV")
`MPRnb(VFBO           ,-1.0       ,"V"                                  ,"Geometry-independent flat-band voltage at TR")
`MPRnb(VFBL           ,0.0        ,"V"                                  ,"Length dependence of flat-band voltage")
`MPRnb(VFBW           ,0.0        ,"V"                                  ,"Width dependence of flat-band voltage")
`MPRnb(VFBLW          ,0.0        ,"V"                                  ,"Area dependence of flat-band voltage")
`MPRnb(STVFBO         ,5.0e-4     ,"V/K"                                ,"Geometry-independent temperature dependence of VFB")
`MPRnb(STVFBL         ,0.0        ,"V/K"                                ,"Length dependence of temperature dependence of VFB")
`MPRnb(STVFBW         ,0.0        ,"V/K"                                ,"Width dependence of temperature dependence of VFB")
`MPRnb(STVFBLW        ,0.0        ,"V/K"                                ,"Area dependence of temperature dependence of VFB")
`MPRnb(ST2VFBO        ,0.0        ,"K^-1"                               ,"Quadratic temperature dependence of VFB")
`MPRco(TOXO           ,2.0e-9     ,"m"        ,1.0e-10     ,inf         ,"Gate oxide thickness")
`MPRco(EPSROXO        ,3.9        ,""         ,1.0         ,inf         ,"Relative permittivity of gate dielectric")
`MPRco(NSUBO          ,3.0e23     ,"m^-3"     ,1.0e20      ,inf         ,"Geometry independent substrate doping")
`MPRnb(NSUBW          ,0.0        ,""                                   ,"Width dependence of background doping NSUBO due to segregation")
`MPRco(WSEG           ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Char. length of segregation of background doping NSUBO")
`MPRcz(NPCK           ,1.0e24     ,"m^-3"                               ,"Pocket doping level")
`MPRnb(NPCKW          ,0.0        ,""                                   ,"Width dependence of pocket doping NPCK due to segregation")
`MPRco(WSEGP          ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Char. length of segregation of pocket doping NPCK")
`MPRco(LPCK           ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Char. length of lateral doping profile")
`MPRnb(LPCKW          ,0.0        ,""                                   ,"Width dependence of char. length of lateral doping profile")
`MPRnb(FOL1           ,0.0        ,""                                   ,"First length dependence coefficient for short channel body effect")
`MPRnb(FOL2           ,0.0        ,""                                   ,"Second length dependence coefficient for short channel body effect")
`MPRnb(FACNEFFACO     ,1.0        ,""                                   ,"Geom. independent pre-factor for effective substrate doping in separate charge calculation")
`MPRnb(FACNEFFACL     ,0.0        ,""                                   ,"Length dependence of FACNEFFAC")
`MPRnb(FACNEFFACW     ,0.0        ,""                                   ,"Width dependence of FACNEFFAC")
`MPRnb(FACNEFFACLW    ,0.0        ,""                                   ,"Area dependence of FACNEFFAC")
`MPRnb(GFACNUDO       ,1.0        ,""                                   ,"Geom. independent body-factor change due to NUD-effect")
`MPRnb(GFACNUDL       ,0.0        ,""                                   ,"Length dependence of GFACNUD")
`MPRnb(GFACNUDLEXP    ,1.0        ,""                                   ,"Exponent for length dependence of GFACNUD")
`MPRnb(GFACNUDW       ,0.0        ,""                                   ,"Width dependence of GFACNUD")
`MPRnb(GFACNUDLW      ,0.0        ,""                                   ,"Area dependence of GFACNUD")
`MPRnb(VSBNUDO        ,0.0        ,"V"                                  ,"Lower Vsb value for NUD-effect")
`MPRnb(DVSBNUDO       ,1.0        ,"V"                                  ,"Vsb range for NUD-effect")
`MPRnb(VNSUBO         ,0.0        ,"V"                                  ,"Effective doping bias-dependence parameter")
`MPRnb(NSLPO          ,0.05       ,"V"                                  ,"Effective doping bias-dependence parameter")
`MPRnb(DNSUBO         ,0.0        ,"V^-1"                               ,"Effective doping bias-dependence parameter")
`MPRnb(DPHIBO         ,0.0        ,"V"                                  ,"Geometry independent offset of PHIB")
`MPRnb(DPHIBL         ,0.0        ,"V"                                  ,"Length dependence offset of PHIB")
`MPRnb(DPHIBLEXP      ,1.0        ,""                                   ,"Exponent for length dependence of offset of PHIB")
`MPRnb(DPHIBW         ,0.0        ,"V"                                  ,"Width dependence of offset of PHIB")
`MPRnb(DPHIBLW        ,0.0        ,"V"                                  ,"Area dependence of offset of PHIB")
`MPRnb(DELVTACO       ,0.0        ,"V"                                  ,"Geom. independent offset parameter for PHIB in separate charge calculation")
`MPRnb(DELVTACL       ,0.0        ,"V"                                  ,"Length dependence of DELVTAC")
`MPRnb(DELVTACLEXP    ,1.0        ,""                                   ,"Exponent for length dependence of offset of DELVTAC")
`MPRnb(DELVTACW       ,0.0        ,"V"                                  ,"Width dependence of DELVTAC")
`MPRnb(DELVTACLW      ,0.0        ,"V"                                  ,"Area dependence of DELVTAC")
`MPRnb(NPO            ,1.0e26     ,"m^-3"                               ,"Geometry-independent gate poly-silicon doping")
`MPRnb(NPL            ,0.0        ,""                                   ,"Length dependence of gate poly-silicon doping")
`MPRco(TOXOVO         ,2.0e-9     ,"m"        ,1.0e-10     ,inf         ,"Overlap oxide thickness")
`MPRco(TOXOVDO        ,2.0e-9     ,"m"        ,1.0e-10     ,inf         ,"Overlap oxide thickness for drain side")
`MPRcz(LOV            ,0.0        ,"m"                                  ,"Overlap length for gate/drain and gate/source overlap capacitance")
`MPRcz(LOVD           ,0.0        ,"m"                                  ,"Overlap length for gate/drain overlap capacitance")
`MPRnb(NOVO           ,5.0e25     ,"m^-3"                               ,"Effective doping of overlap region")
`MPRnb(NOVDO          ,5.0e25     ,"m^-3"                               ,"Effective doping of overlap region for drain side")

//  Interface states parameters: PSP 103.6
`MPRnb(CTO            ,0.0        ,""                                   ,"Geometry-independent interface states factor")
`MPRnb(CTL            ,0.0        ,""                                   ,"Length dependence of interface states factor")
`MPRnb(CTLEXP         ,1.0        ,""                                   ,"Exponent for length dependence of interface states factor")
`MPRnb(CTW            ,0.0        ,""                                   ,"Width dependence of interface states factor")
`MPRnb(CTLW           ,0.0        ,""                                   ,"Area dependence of interface states factor")
`MPRcz(CTGO           ,0.0        ,""                                   ,"Gate voltage dependence of interface states factor")
`MPRnb(CTBO           ,0.0        ,""                                   ,"Bulk voltage dependence of interface states factor")
`MPRnb(STCTO          ,1.0        ,""                                   ,"Geometry-independent temperature dependence of CT")

// DIBL Parameters
`MPRnb(CFL            ,0.0        ,""                                   ,"Length dependence of DIBL-parameter")
`MPRnb(CFLEXP         ,2.0        ,""                                   ,"Exponent for length dependence of CF")
`MPRnb(CFW            ,0.0        ,""                                   ,"Width dependence of CF")
`MPRnb(CFACL          ,0.0        ,""                                   ,"Length dependence of DIBL-parameter of charge model when SWQSAT=1")
`MPRnb(CFACLEXP       ,2.0        ,""                                   ,"Exponent for length dependence of CF")
`MPRnb(CFACW          ,0.0        ,""                                   ,"Width dependence of CF")
`MPRcz(CFDO           ,0.0        ,"V^-1"                               ,"Drain voltage dependence of CF")
`MPRnb(CFBO           ,0.0        ,"V^-1"                               ,"Back-bias dependence of CF")

//  Subthreshold slope parameters of short channel transistor
`MPRnb(PSCEL          ,0.0        ,""                                   ,"Length dependence of subthreshold slope coefficient for short channel transistor")
`MPRnb(PSCELEXP       ,2.0        ,""                                   ,"Exponent for length dependence of subthreshold slope coefficient for short channel transistor")
`MPRnb(PSCEW          ,0.0        ,""                                   ,"Exponent for length dependence of subthreshold slope coefficient for short channel transistor")
`MPRcc(PSCEBO         ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of subthreshold slope coefficient for short channel transistor")
`MPRcz(PSCEDO         ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of subthreshold slope coefficient for short channel transistor")

// Mobility Parameters
`MPRcz(UO             ,5.0e-2     ,"m^2/V/s"                            ,"Zero-field mobility at TR")
`MPRnb(FBET1          ,0.0        ,""                                   ,"Relative mobility decrease due to first lateral profile")
`MPRnb(FBET1W         ,0.0        ,""                                   ,"Width dependence of relative mobility decrease due to first lateral profile")
`MPRco(LP1            ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Mobility-related characteristic length of first lateral profile")
`MPRnb(LP1W           ,0.0        ,""                                   ,"Width dependence of mobility-related characteristic length of first lateral profile")
`MPRnb(FBET2          ,0.0        ,""                                   ,"Relative mobility decrease due to second lateral profile")
`MPRco(LP2            ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Mobility-related characteristic length of second lateral profile")
`MPRnb(BETW1          ,0.0        ,""                                   ,"First higher-order width scaling coefficient of BETN")
`MPRnb(BETW2          ,0.0        ,""                                   ,"Second higher-order width scaling coefficient of BETN")
`MPRco(WBET           ,1.0e-9     ,"m"        ,1.0e-10     ,inf         ,"Characteristic width for width scaling of BETN")
`MPRnb(STBETO         ,1.0        ,""                                   ,"Geometry independent temperature dependence of BETN")
`MPRnb(STBETL         ,0.0        ,""                                   ,"Length dependence of temperature dependence of BETN")
`MPRnb(STBETW         ,0.0        ,""                                   ,"Width dependence of temperature dependence of BETN")
`MPRnb(STBETLW        ,0.0        ,""                                   ,"Area dependence of temperature dependence of BETN")
`MPRnb(MUEO           ,0.5        ,"m/V"                                ,"Geometry independent mobility reduction coefficient at TR")
`MPRnb(MUEW           ,0.0        ,""                                   ,"Width dependence of mobility reduction coefficient at TR")
`MPRnb(STMUEO         ,0.0        ,""                                   ,"Temperature dependence of MUE")
`MPRnb(THEMUO         ,1.5        ,""                                   ,"Mobility reduction exponent at TR")
`MPRnb(STTHEMUO       ,1.5        ,""                                   ,"Temperature dependence of THEMU")
`MPRnb(CSO            ,0.0        ,""                                   ,"Geometry independent coulomb scattering parameter at TR")
`MPRnb(CSL            ,0.0        ,""                                   ,"Length dependence of CS")
`MPRnb(CSLEXP         ,1.0        ,""                                   ,"Exponent for length dependence of CS")
`MPRnb(CSW            ,0.0        ,""                                   ,"Width dependence of CS")
`MPRnb(CSLW           ,0.0        ,""                                   ,"Area dependence of CS")
`MPRnb(STCSO          ,0.0        ,""                                   ,"Temperature dependence of CS")
`MPRcz(THECSO         ,2.0        ,""                                   ,"Coulomb scattering exponent at TR")
`MPRnb(STTHECSO       ,0.0        ,""                                   ,"Temperature dependence of THECS")
`MPRnb(XCORO          ,0.0        ,"V^-1"                               ,"Geometry independent non-universality parameter")
`MPRnb(XCORL          ,0.0        ,""                                   ,"Length dependence of non-universality parameter")
`MPRnb(XCORW          ,0.0        ,""                                   ,"Width dependence of non-universality parameter")
`MPRnb(XCORLW         ,0.0        ,""                                   ,"Area dependence of non-universality parameter")
`MPRnb(STXCORO        ,0.0        ,""                                   ,"Temperature dependence of XCOR")
`MPRnb(FETAO          ,1.0        ,""                                   ,"Effective field parameter")

// Series Resistance
`MPRnb(RSW1           ,50.0       ,"Ohm"                                ,"Source/drain series resistance for 1 um wide channel at TR")
`MPRnb(RSW2           ,0.0        ,""                                   ,"Higher-order width scaling of RS")
`MPRnb(STRSO          ,1.0        ,""                                   ,"Temperature dependence of RS")
`MPRnb(RSBO           ,0.0        ,"V^-1"                               ,"Back-bias dependence of series resistance")
`MPRnb(RSGO           ,0.0        ,"V^-1"                               ,"Gate-bias dependence of series resistance")

// Velocity Saturation
`MPRnb(THESATO        ,0.0        ,"V^-1"                               ,"Geometry independent velocity saturation parameter at TR")
`MPRnb(THESATL        ,0.05       ,"V^-1"                               ,"Length dependence of THESAT")
`MPRnb(THESATLEXP     ,1.0        ,""                                   ,"Exponent for length dependence of THESAT")
`MPRnb(THESATW        ,0.0        ,""                                   ,"Width dependence of THESAT")
`MPRnb(THESATLW       ,0.0        ,""                                   ,"Area dependence of THESAT")
`MPRnb(THESATACO      ,0.0        ,"V^-1"                               ,"Geometry independent velocity saturation parameter at TR of charge model when SWQSAT=1")
`MPRnb(THESATACL      ,0.05       ,"V^-1"                               ,"Length dependence of THESATAC")
`MPRnb(THESATACLEXP   ,1.0        ,""                                   ,"Exponent for length dependence of THESATAC")
`MPRnb(THESATACW      ,0.0        ,""                                   ,"Width dependence of THESATAC")
`MPRnb(THESATACLW     ,0.0        ,""                                   ,"Area dependence of THESATAC")
`MPRnb(STTHESATO      ,1.0        ,""                                   ,"Geometry independent temperature dependence of THESAT")
`MPRnb(STTHESATL      ,0.0        ,""                                   ,"Length dependence of temperature dependence of THESAT")
`MPRnb(STTHESATW      ,0.0        ,""                                   ,"Width dependence of temperature dependence of THESAT")
`MPRnb(STTHESATLW     ,0.0        ,""                                   ,"Area dependence of temperature dependence of THESAT")
`MPRnb(THESATBO       ,0.0        ,"V^-1"                               ,"Back-bias dependence of velocity saturation")
`MPRnb(THESATGO       ,0.0        ,"V^-1"                               ,"Gate-bias dependence of velocity saturation")

// Saturation Voltage
`MPRnb(AXO            ,18.0       ,""                                   ,"Geometry independent linear/saturation transition factor")
`MPRcz(AXL            ,0.4        ,""                                   ,"Length dependence of AX")
`MPRnb(AXACO          ,18.0       ,""                                   ,"Geometry independent linear/saturation transition factor of charge model when SWQSAT=1")
`MPRcz(AXACL          ,0.4        ,""                                   ,"Length dependence of AXAC")

// Channel Length Modulation
`MPRnb(ALPL           ,5.0e-4     ,""                                   ,"Length dependence of ALP")
`MPRnb(ALPLEXP        ,1.0        ,""                                   ,"Exponent for length dependence of ALP")
`MPRnb(ALPW           ,0.0        ,""                                   ,"Width dependence of ALP")
`MPRnb(ALPACL         ,5.0e-4     ,""                                   ,"Length dependence of ALPAC")
`MPRnb(ALPACLEXP      ,1.0        ,""                                   ,"Exponent for length dependence of ALPAC")
`MPRnb(ALPACW         ,0.0        ,""                                   ,"Width dependence of ALPAC")
`MPRnb(ALP1L1         ,0.0        ,"V"                                  ,"Length dependence of CLM enhancement factor above threshold")
`MPRnb(ALP1LEXP       ,0.5        ,""                                   ,"Exponent for length dependence of ALP1")
`MPRcz(ALP1L2         ,0.0        ,""                                   ,"Second_order length dependence of ALP1")
`MPRnb(ALP1W          ,0.0        ,""                                   ,"Width dependence of ALP1")
`MPRnb(ALP2L1         ,0.0        ,"V^-1"                               ,"Length dependence of CLM enhancement factor below threshold")
`MPRnb(ALP2LEXP       ,0.5        ,""                                   ,"Exponent for length dependence of ALP2")
`MPRcz(ALP2L2         ,0.0        ,""                                   ,"Second_order length dependence of ALP2")
`MPRnb(ALP2W          ,0.0        ,""                                   ,"Width dependence of ALP2")
`MPRnb(VPO            ,0.05       ,"V"                                  ,"CLM logarithmic dependence parameter")

// Weak-avalanche parameters
`MPRnb(A1O            ,1.0        ,""                                   ,"Geometry independent impact-ionization pre-factor")
`MPRnb(A1L            ,0.0        ,""                                   ,"Length dependence of A1")
`MPRnb(A1W            ,0.0        ,""                                   ,"Width dependence of A1")
`MPRnb(A2O            ,10.0       ,"V"                                  ,"Impact-ionization exponent at TR")
`MPRnb(STA2O          ,0.0        ,"V"                                  ,"Temperature dependence of A2")
`MPRnb(A3O            ,1.0        ,""                                   ,"Geometry independent saturation-voltage dependence of II")
`MPRnb(A3L            ,0.0        ,""                                   ,"Length dependence of A3")
`MPRnb(A3W            ,0.0        ,""                                   ,"Width dependence of A3")
`MPRnb(A4O            ,0.0        ,"V^-0.5"                             ,"Geometry independent back-bias dependence of II")
`MPRnb(A4L            ,0.0        ,""                                   ,"Length dependence of A4")
`MPRnb(A4W            ,0.0        ,""                                   ,"Width dependence of A4")

// Gate current parameters
`MPRnb(GCOO           ,0.0        ,""                                   ,"Gate tunnelling energy adjustment")
`MPRnb(IGINVLW        ,0.0        ,"A"                                  ,"Gate channel current pre-factor for 1 um^2 channel area")
`MPRnb(IGOVW          ,0.0        ,"A"                                  ,"Gate overlap current pre-factor for 1 um wide channel")
`MPRnb(IGOVDW         ,0.0        ,"A"                                  ,"Gate overlap current pre-factor for 1 um wide channel for drain side")
`MPRnb(STIGO          ,2.0        ,""                                   ,"Temperature dependence of IGINV and IGOV")
`MPRnb(GC2O           ,0.375      ,""                                   ,"Gate current slope factor")
`MPRnb(GC3O           ,0.063      ,""                                   ,"Gate current curvature factor")
`MPRnb(GC2OVO         ,0.375      ,""                                   ,"Gate overlap current slope factor, used only when SWIGATE=2")
`MPRnb(GC3OVO         ,0.063      ,""                                   ,"Gate overlap current curvature factor, used only when SWIGATE=2")
`MPRnb(CHIBO          ,3.1        ,"V"                                  ,"Tunnelling barrier height")

// Gate-induced drain leakage parameters
`MPRnb(AGIDLW         ,0.0        ,"A/V^3"                              ,"Width dependence of GIDL pre-factor")
`MPRnb(AGIDLDW        ,0.0        ,"A/V^3"                              ,"Width dependence of GIDL pre-factor for drain side")
`MPRnb(BGIDLO         ,41.0       ,"V"                                  ,"GIDL probability factor at TR")
`MPRnb(BGIDLDO        ,41.0       ,"V"                                  ,"GIDL probability factor at TR for drain side")
`MPRnb(STBGIDLO       ,0.0        ,"V/K"                                ,"Temperature dependence of BGIDL")
`MPRnb(STBGIDLDO      ,0.0        ,"V/K"                                ,"Temperature dependence of BGIDL for drain side")
`MPRnb(CGIDLO         ,0.0        ,""                                   ,"Back-bias dependence of GIDL")
`MPRnb(CGIDLDO        ,0.0        ,""                                   ,"Back-bias dependence of GIDL for drain side")

// Charge Model Parameters
`MPRnb(CGBOVL         ,0.0        ,"F"                                  ,"Oxide capacitance for gate-bulk overlap for 1 um long channel")
`MPRnb(CFRW           ,0.0        ,"F"                                  ,"Outer fringe capacitance for 1 um wide channel")
`MPRnb(CFRDW          ,0.0        ,"F"                                  ,"Outer fringe capacitance for 1 um wide channel for drain side")

// Noise Model Parameters
`MPRnb(FNTO           ,1.0        ,""                                   ,"Thermal noise coefficient")
`MPRcz(FNTEXCL        ,0.0        ,""                                   ,"Length dependence coefficient of excess noise")
`MPRnb(NFALW          ,8.0e22     ,"V^-1/m^4"                           ,"First coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(NFBLW          ,3.0e7      ,"V^-1/m^2"                           ,"Second coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(NFCLW          ,0.0        ,"V^-1"                               ,"Third coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(EFO            ,1.0        ,""                                   ,"Flicker noise frequency exponent")
`MPRnb(LINTNOI        ,0.0        ,"m"                                  ,"Length offset for flicker noise")
`MPRnb(ALPNOI         ,2.0        ,""                                   ,"Exponent for length offset for flicker noise")

// Edge transistor parameters: PSP 103.4
`MPRcz(WEDGE          ,1.0e-8     ,"m"                                  ,"Electrical width of edge transistor per side")
`MPRcz(WEDGEW         ,0.0        ,""                                   ,"Width dependence of edge WEDGE")
`MPRnb(VFBEDGEO       ,-1.0       ,"V"                                  ,"Geometry-independent flat-band voltage of edge transistors at TR")
`MPRnb(STVFBEDGEO     ,5.0e-4     ,"V/K"                                ,"Geometry-independent temperature dependence of VFBEDGE")
`MPRnb(STVFBEDGEL     ,0.0        ,"V/K"                                ,"Length dependence of temperature dependence of VFBEDGE")
`MPRnb(STVFBEDGEW     ,0.0        ,"V/K"                                ,"Width dependence of temperature dependence of VFBEDGE")
`MPRnb(STVFBEDGELW    ,0.0        ,"V/K"                                ,"Area dependence of temperature dependence of VFBEDGE")
`MPRnb(DPHIBEDGEO     ,0.0        ,"V"                                  ,"Geometry independent of edge transistor PHIB offset")
`MPRnb(DPHIBEDGEL     ,0.0        ,"V"                                  ,"Length dependence of edge transistor PHIB offset")
`MPRnb(DPHIBEDGELEXP  ,1.0        ,""                                   ,"Exponent for length dependence of edge transistor PHIB offset")
`MPRnb(DPHIBEDGEW     ,0.0        ,"V"                                  ,"Width dependence of edge transistor PHIB offset")
`MPRnb(DPHIBEDGELW    ,0.0        ,"V"                                  ,"Area dependence of edge transistor PHIB offset")
`MPRco(NSUBEDGEO      ,5.0e23     ,"m^-3"     ,1.0e20      ,inf         ,"Geometry independent substrate doping of edge transistors")
`MPRnb(NSUBEDGEL      ,0.0        ,""                                   ,"Length dependence of edge transistor substrate doping")
`MPRnb(NSUBEDGELEXP   ,1.0        ,""                                   ,"Exponent for length dependence of edge transistor substrate doping")
`MPRnb(NSUBEDGEW      ,0.0        ,""                                   ,"Width dependence of edge transistor substrate doping")
`MPRnb(NSUBEDGELW     ,0.0        ,""                                   ,"Area dependence of edge transistor substrate doping")
`MPRnb(CTEDGEO        ,0.0        ,""                                   ,"Geometry-independent interface states factor of edge transistors")
`MPRnb(CTEDGEL        ,0.0        ,""                                   ,"Length dependence of interface states factor of edge transistors")
`MPRnb(CTEDGELEXP     ,1.0        ,""                                   ,"Exponent for length dependence of interface states factor of edge transistors")
`MPRnb(FBETEDGE       ,0.0        ,""                                   ,"Length dependence of edge transistor mobility")
`MPRco(LPEDGE         ,1.0e-8     ,"m"        ,1.0e-10     ,inf         ,"Exponent for length dependence of edge transistor mobility")
`MPRnb(BETEDGEW       ,0.0        ,""                                   ,"Width scaling coefficient of edge transistor mobility")
`MPRnb(STBETEDGEO     ,1.0        ,""                                   ,"Geometry independent temperature dependence of BETNEDGE")
`MPRnb(STBETEDGEL     ,0.0        ,""                                   ,"Length dependence of temperature dependence of BETNEDGE")
`MPRnb(STBETEDGEW     ,0.0        ,""                                   ,"Width dependence of temperature dependence of BETNEDGE")
`MPRnb(STBETEDGELW    ,0.0        ,""                                   ,"Area dependence of temperature dependence of BETNEDGE")
`MPRnb(PSCEEDGEL      ,0.0        ,""                                   ,"Length dependence of subthreshold slope coefficient for short channel edge transistors")
`MPRnb(PSCEEDGELEXP   ,2.0        ,""                                   ,"Exponent for length dependence of subthreshold slope coefficient for short channel edge transistors")
`MPRnb(PSCEEDGEW      ,0.0        ,""                                   ,"Exponent for length dependence of subthreshold slope coefficient for short channel edge transistor")
`MPRcc(PSCEBEDGEO     ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of subthreshold slope coefficient for short channel edge transistors")
`MPRcz(PSCEDEDGEO     ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of subthreshold slope coefficient for short channel edge transistors")
`MPRnb(CFEDGEL        ,0.0        ,""                                   ,"Length dependence of DIBL-parameter of edge transistors")
`MPRnb(CFEDGELEXP     ,2.0        ,""                                   ,"Exponent for length dependence of DIBL-parameter of edge transistors")
`MPRnb(CFEDGEW        ,0.0        ,""                                   ,"Width dependence of DIBL-parameter of edge transistors")
`MPRcz(CFDEDGEO       ,0.0        ,"V^-1"                               ,"Drain voltage dependence parameter of DIBL-parameter of edge transistors")
`MPRcc(CFBEDGEO       ,0.0        ,"V^-1"     ,0.0         ,1.0         ,"Bulk voltage dependence parameter of DIBL-parameter of edge transistors")
`MPRnb(FNTEDGEO       ,1.0        ,""                                   ,"Thermal noise coefficient")
`MPRnb(NFAEDGELW      ,8.0e22     ,"V^-1/m^4"                           ,"First coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(NFBEDGELW      ,3.0e7      ,"V^-1/m^2"                           ,"Second coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(NFCEDGELW      ,0.0        ,"V^-1"                               ,"Third coefficient of flicker noise for 1 um^2 channel area")
`MPRnb(EFEDGEO        ,1.0        ,""                                   ,"Flicker noise frequency exponent")

// Well proximity effect Parameters
`MPRnb(KVTHOWEO       ,0.0        ,""                                   ,"Geometrical independent threshold shift parameter")
`MPRnb(KVTHOWEL       ,0.0        ,""                                   ,"Length dependent threshold shift parameter")
`MPRnb(KVTHOWEW       ,0.0        ,""                                   ,"Width dependent threshold shift parameter")
`MPRnb(KVTHOWELW      ,0.0        ,""                                   ,"Area dependent threshold shift parameter")
`MPRnb(KUOWEO         ,0.0        ,""                                   ,"Geometrical independent mobility degradation factor")
`MPRnb(KUOWEL         ,0.0        ,""                                   ,"Length dependent mobility degradation factor")
`MPRnb(KUOWEW         ,0.0        ,""                                   ,"Width dependent mobility degradation factor")
`MPRnb(KUOWELW        ,0.0        ,""                                   ,"Area dependent mobility degradation factor")

//  --------------------------------------------------------------------------------------------------------------
//  PSP global model parameters (binning)
//  --------------------------------------------------------------------------------------------------------------

// Process parameters
`MPRnb(POVFB          ,-1.0       ,"V"                                  ,"Coefficient for the geometry independent part of VFB")
`MPRnb(PLVFB          ,0.0        ,"V"                                  ,"Coefficient for the length dependence of VFB")
`MPRnb(PWVFB          ,0.0        ,"V"                                  ,"Coefficient for the width dependence of VFB")
`MPRnb(PLWVFB         ,0.0        ,"V"                                  ,"Coefficient for the length times width dependence of VFB")
`MPRnb(POSTVFB        ,5.0e-4     ,"V/K"                                ,"Coefficient for the geometry independent part of STVFB")
`MPRnb(PLSTVFB        ,0.0        ,"V/K"                                ,"Coefficient for the length dependence of STVFB")
`MPRnb(PWSTVFB        ,0.0        ,"V/K"                                ,"Coefficient for the width dependence of STVFB")
`MPRnb(PLWSTVFB       ,0.0        ,"V/K"                                ,"Coefficient for the length times width dependence of STVFB")
`MPRnb(POST2VFB       ,0.0        ,"K^-1"                               ,"Coefficient for the geometry independent part of ST2VFB")
`MPRnb(POTOX          ,2.0e-9     ,"m"                                  ,"Coefficient for the geometry independent part of TOX")
`MPRnb(POEPSROX       ,3.9        ,""                                   ,"Coefficient for the geometry independent part of EPSOX")
`MPRnb(PONEFF         ,5.0e23     ,"m^-3"                               ,"Coefficient for the geometry independent part of NEFF")
`MPRnb(PLNEFF         ,0.0        ,"m^-3"                               ,"Coefficient for the length dependence of NEFF")
`MPRnb(PWNEFF         ,0.0        ,"m^-3"                               ,"Coefficient for the width dependence of NEFF")
`MPRnb(PLWNEFF        ,0.0        ,"m^-3"                               ,"Coefficient for the length times width dependence of NEFF")
`MPRnb(POFACNEFFAC    ,1.0        ,""                                   ,"Coefficient for the geometry independent part of FACNEFFAC")
`MPRnb(PLFACNEFFAC    ,0.0        ,""                                   ,"Coefficient for the length dependence of FACNEFFAC")
`MPRnb(PWFACNEFFAC    ,0.0        ,""                                   ,"Coefficient for the width dependence of FACNEFFAC")
`MPRnb(PLWFACNEFFAC   ,0.0        ,""                                   ,"Coefficient for the length times width dependence of FACNEFFAC")
`MPRnb(POGFACNUD      ,1.0        ,""                                   ,"Coefficient for the geometry independent part of GFACNUD")
`MPRnb(PLGFACNUD      ,0.0        ,""                                   ,"Coefficient for the length dependence of GFACNUD")
`MPRnb(PWGFACNUD      ,0.0        ,""                                   ,"Coefficient for the width dependence of GFACNUD")
`MPRnb(PLWGFACNUD     ,0.0        ,""                                   ,"Coefficient for the length times width dependence of GFACNUD")
`MPRnb(POVSBNUD       ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of VSBNUD")
`MPRnb(PODVSBNUD      ,1.0        ,"V"                                  ,"Coefficient for the geometry independent part of DVSBNUD")
`MPRnb(POVNSUB        ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of VNSUB")
`MPRnb(PONSLP         ,0.05       ,"V"                                  ,"Coefficient for the geometry independent part of NSLP")
`MPRnb(PODNSUB        ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of DNSUB")
`MPRnb(PODPHIB        ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of DPHIB")
`MPRnb(PLDPHIB        ,0.0        ,"V"                                  ,"Coefficient for the length dependence of DPHIB")
`MPRnb(PWDPHIB        ,0.0        ,"V"                                  ,"Coefficient for the width dependence of DPHIB")
`MPRnb(PLWDPHIB       ,0.0        ,"V"                                  ,"Coefficient for the length times width dependence of DPHIB")
`MPRnb(PODELVTAC      ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of DELVTAC")
`MPRnb(PLDELVTAC      ,0.0        ,"V"                                  ,"Coefficient for the length dependence of DELVTAC")
`MPRnb(PWDELVTAC      ,0.0        ,"V"                                  ,"Coefficient for the width dependence of DELVTAC")
`MPRnb(PLWDELVTAC     ,0.0        ,"V"                                  ,"Coefficient for the length times width dependence of DELVTAC")
`MPRnb(PONP           ,1.0e26     ,"m^-3"                               ,"Coefficient for the geometry independent part of NP")
`MPRnb(PLNP           ,0.0        ,"m^-3"                               ,"Coefficient for the length dependence of NP")
`MPRnb(PWNP           ,0.0        ,"m^-3"                               ,"Coefficient for the width dependence of NP")
`MPRnb(PLWNP          ,0.0        ,"m^-3"                               ,"Coefficient for the length times width dependence of NP")
`MPRnb(POTOXOV        ,2.0e-09    ,"m"                                  ,"Coefficient for the geometry independent part of TOXOV")
`MPRnb(POTOXOVD       ,2.0e-09    ,"m"                                  ,"Coefficient for the geometry independent part of TOXOV for drain side")
`MPRnb(PONOV          ,5.0e25     ,"m^-3"                               ,"Coefficient for the geometry independent part of NOV")
`MPRnb(PLNOV          ,0.0        ,"m^-3"                               ,"Coefficient for the length dependence of NOV")
`MPRnb(PWNOV          ,0.0        ,"m^-3"                               ,"Coefficient for the width dependence of NOV")
`MPRnb(PLWNOV         ,0.0        ,"m^-3"                               ,"Coefficient for the length times width dependence of NOV")
`MPRnb(PONOVD         ,5.0e25     ,"m^-3"                               ,"Coefficient for the geometry independent part of NOV for drain side")
`MPRnb(PLNOVD         ,0.0        ,"m^-3"                               ,"Coefficient for the length dependence of NOV for drain side")
`MPRnb(PWNOVD         ,0.0        ,"m^-3"                               ,"Coefficient for the width dependence of NOV for drain side")
`MPRnb(PLWNOVD        ,0.0        ,"m^-3"                               ,"Coefficient for the length times width dependence of NOV for drain side")

//  Interface states parameters
`MPRnb(POCT           ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CT")
`MPRnb(PLCT           ,0.0        ,""                                   ,"Coefficient for the length dependence of CT")
`MPRnb(PWCT           ,0.0        ,""                                   ,"Coefficient for the width dependence of CT")
`MPRnb(PLWCT          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CT")
`MPRnb(POCTG          ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CTG")
`MPRnb(POCTB          ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CTB")
`MPRnb(POSTCT         ,1.0        ,""                                   ,"Coefficient for the geometry independent part of STCT")

// DIBL parameters
`MPRnb(POCF           ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CF")
`MPRnb(PLCF           ,0.0        ,""                                   ,"Coefficient for the length dependence of CF")
`MPRnb(PWCF           ,0.0        ,""                                   ,"Coefficient for the width dependence of CF")
`MPRnb(PLWCF          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CF")
`MPRnb(POCFAC         ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CFAC")
`MPRnb(PLCFAC         ,0.0        ,""                                   ,"Coefficient for the length dependence of CFAC")
`MPRnb(PWCFAC         ,0.0        ,""                                   ,"Coefficient for the width dependence of CFAC")
`MPRnb(PLWCFAC        ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CFAC")
`MPRnb(POCFD          ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of CFD")
`MPRnb(POCFB          ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of CFB")

//  Subthreshold slope parameters of short channel transistor
`MPRnb(POPSCE         ,0.0        ,""                                   ,"Coefficient for the geometry independent part of PSCE")
`MPRnb(PLPSCE         ,0.0        ,""                                   ,"Coefficient for the length dependence of PSCE")
`MPRnb(PWPSCE         ,0.0        ,""                                   ,"Coefficient for the width dependence of PSCE")
`MPRnb(PLWPSCE        ,0.0        ,""                                   ,"Coefficient for the length times width dependence of PSCE")
`MPRnb(POPSCEB        ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of PSCEB")
`MPRnb(POPSCED        ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of PSCED")

// Mobility parameters
`MPRnb(POBETN         ,7.0e-2     ,"m^2/V/s"                            ,"Coefficient for the geometry independent part of BETN")
`MPRnb(PLBETN         ,0.0        ,"m^2/V/s"                            ,"Coefficient for the length dependence of BETN")
`MPRnb(PWBETN         ,0.0        ,"m^2/V/s"                            ,"Coefficient for the width dependence of BETN")
`MPRnb(PLWBETN        ,0.0        ,"m^2/V/s"                            ,"Coefficient for the length times width dependence of BETN")
`MPRnb(POSTBET        ,1.0        ,""                                   ,"Coefficient for the geometry independent part of STBET")
`MPRnb(PLSTBET        ,0.0        ,""                                   ,"Coefficient for the length dependence of STBET")
`MPRnb(PWSTBET        ,0.0        ,""                                   ,"Coefficient for the width dependence of STBET")
`MPRnb(PLWSTBET       ,0.0        ,""                                   ,"Coefficient for the length times width dependence of STBET")
`MPRnb(POMUE          ,0.5        ,"m/V"                                ,"Coefficient for the geometry independent part of MUE")
`MPRnb(PLMUE          ,0.0        ,"m/V"                                ,"Coefficient for the length dependence of MUE")
`MPRnb(PWMUE          ,0.0        ,"m/V"                                ,"Coefficient for the width dependence of MUE")
`MPRnb(PLWMUE         ,0.0        ,"m/V"                                ,"Coefficient for the length times width dependence of MUE")
`MPRnb(POSTMUE        ,0.0        ,""                                   ,"Coefficient for the geometry independent part of STMUE")
`MPRnb(POTHEMU        ,1.5        ,""                                   ,"Coefficient for the geometry independent part of THEMU")
`MPRnb(POSTTHEMU      ,1.5        ,""                                   ,"Coefficient for the geometry independent part of STTHEMU")
`MPRnb(POCS           ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CS")
`MPRnb(PLCS           ,0.0        ,""                                   ,"Coefficient for the length dependence of CS")
`MPRnb(PWCS           ,0.0        ,""                                   ,"Coefficient for the width dependence of CS")
`MPRnb(PLWCS          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CS")
`MPRnb(POSTCS         ,0.0        ,""                                   ,"Coefficient for the geometry independent part of STCS")
`MPRnb(POTHECS        ,2.0        ,""                                   ,"Coefficient for the geometry independent part of THECS")
`MPRnb(POSTTHECS      ,0.0        ,""                                   ,"Coefficient for the geometry independent part of STHTECS")
`MPRnb(POXCOR         ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of XCOR")
`MPRnb(PLXCOR         ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of XCOR")
`MPRnb(PWXCOR         ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of XCOR")
`MPRnb(PLWXCOR        ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of XCOR")
`MPRnb(POSTXCOR       ,0.0        ,""                                   ,"Coefficient for the geometry independent part of STXCOR")
`MPRnb(POFETA         ,1.0        ,""                                   ,"Coefficient for the geometry independent part of FETA")

// Series resistance parameters
`MPRnb(PORS           ,30.0       ,"Ohm"                                ,"Coefficient for the geometry independent part of RS")
`MPRnb(PLRS           ,0.0        ,"Ohm"                                ,"Coefficient for the length dependence of RS")
`MPRnb(PWRS           ,0.0        ,"Ohm"                                ,"Coefficient for the width dependence of RS")
`MPRnb(PLWRS          ,0.0        ,"Ohm"                                ,"Coefficient for the length times width dependence of RS")
`MPRnb(POSTRS         ,1.0        ,""                                   ,"Coefficient for the geometry independent part of STRS")
`MPRnb(PORSB          ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of RSB")
`MPRnb(PORSG          ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of RSG")

// Velocity saturation parameters
`MPRnb(POTHESAT       ,1.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of THESAT")
`MPRnb(PLTHESAT       ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of THESAT")
`MPRnb(PWTHESAT       ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of THESAT")
`MPRnb(PLWTHESAT      ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of THESAT")
`MPRnb(POTHESATAC     ,1.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of THESATAC")
`MPRnb(PLTHESATAC     ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of THESATAC")
`MPRnb(PWTHESATAC     ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of THESATAC")
`MPRnb(PLWTHESATAC    ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of THESATAC")
`MPRnb(POSTTHESAT     ,1.0        ,""                                   ,"Coefficient for the geometry independent part of STTHESAT")
`MPRnb(PLSTTHESAT     ,0.0        ,""                                   ,"Coefficient for the length dependence of STTHESAT")
`MPRnb(PWSTTHESAT     ,0.0        ,""                                   ,"Coefficient for the width dependence of STTHESAT")
`MPRnb(PLWSTTHESAT    ,0.0        ,""                                   ,"Coefficient for the length times width dependence of STTHESAT")
`MPRnb(POTHESATB      ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of THESATB")
`MPRnb(PLTHESATB      ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of THESATB")
`MPRnb(PWTHESATB      ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of THESATB")
`MPRnb(PLWTHESATB     ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of THESATB")
`MPRnb(POTHESATG      ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of THESATG")
`MPRnb(PLTHESATG      ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of THESATG")
`MPRnb(PWTHESATG      ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of THESATG")
`MPRnb(PLWTHESATG     ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of THESATG")

// Saturation voltage parameters
`MPRnb(POAX           ,3.0        ,""                                   ,"Coefficient for the geometry independent part of AX")
`MPRnb(PLAX           ,0.0        ,""                                   ,"Coefficient for the length dependence of AX")
`MPRnb(PWAX           ,0.0        ,""                                   ,"Coefficient for the width dependence of AX")
`MPRnb(PLWAX          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of AX")
`MPRnb(POAXAC         ,3.0        ,""                                   ,"Coefficient for the geometry independent part of AXAC")
`MPRnb(PLAXAC         ,0.0        ,""                                   ,"Coefficient for the length dependence of AXAC")
`MPRnb(PWAXAC         ,0.0        ,""                                   ,"Coefficient for the width dependence of AXAC")
`MPRnb(PLWAXAC        ,0.0        ,""                                   ,"Coefficient for the length times width dependence of AXAC")

// Channel length modulation (CLM) parameters
`MPRnb(POALP          ,1.0e-2     ,""                                   ,"Coefficient for the geometry independent part of ALP")
`MPRnb(PLALP          ,0.0        ,""                                   ,"Coefficient for the length dependence of ALP")
`MPRnb(PWALP          ,0.0        ,""                                   ,"Coefficient for the width dependence of ALP")
`MPRnb(PLWALP         ,0.0        ,""                                   ,"Coefficient for the length times width dependence of ALP")
`MPRnb(POALPAC        ,1.0e-2     ,""                                   ,"Coefficient for the geometry independent part of ALPAC")
`MPRnb(PLALPAC        ,0.0        ,""                                   ,"Coefficient for the length dependence of ALPAC")
`MPRnb(PWALPAC        ,0.0        ,""                                   ,"Coefficient for the width dependence of ALPAC")
`MPRnb(PLWALPAC       ,0.0        ,""                                   ,"Coefficient for the length times width dependence of ALPAC")
`MPRnb(POALP1         ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of ALP1")
`MPRnb(PLALP1         ,0.0        ,"V"                                  ,"Coefficient for the length dependence of ALP1")
`MPRnb(PWALP1         ,0.0        ,"V"                                  ,"Coefficient for the width dependence of ALP1")
`MPRnb(PLWALP1        ,0.0        ,"V"                                  ,"Coefficient for the length times width dependence of ALP1")
`MPRnb(POALP2         ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of ALP2")
`MPRnb(PLALP2         ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of ALP2")
`MPRnb(PWALP2         ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of ALP2")
`MPRnb(PLWALP2        ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of ALP2")
`MPRnb(POVP           ,0.05       ,"V"                                  ,"Coefficient for the geometry independent part of VP")

// Impact ionization parameters
`MPRnb(POA1           ,1.0        ,""                                   ,"Coefficient for the geometry independent part of A1")
`MPRnb(PLA1           ,0.0        ,""                                   ,"Coefficient for the length dependence of A1")
`MPRnb(PWA1           ,0.0        ,""                                   ,"Coefficient for the width dependence of A1")
`MPRnb(PLWA1          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of A1")
`MPRnb(POA2           ,10.0       ,"V"                                  ,"Coefficient for the geometry independent part of A2")
`MPRnb(POSTA2         ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of STA2")
`MPRnb(POA3           ,1.0        ,""                                   ,"Coefficient for the geometry independent part of A3")
`MPRnb(PLA3           ,0.0        ,""                                   ,"Coefficient for the length dependence of A3")
`MPRnb(PWA3           ,0.0        ,""                                   ,"Coefficient for the width dependence of A3")
`MPRnb(PLWA3          ,0.0        ,""                                   ,"Coefficient for the length times width dependence of A3")
`MPRnb(POA4           ,0.0        ,"V^-0.5"                             ,"Coefficient for the geometry independent part of A4")
`MPRnb(PLA4           ,0.0        ,"V^-0.5"                             ,"Coefficient for the length dependence of A4")
`MPRnb(PWA4           ,0.0        ,"V^-0.5"                             ,"Coefficient for the width dependence of A4")
`MPRnb(PLWA4          ,0.0        ,"V^-0.5"                             ,"Coefficient for the length times width dependence of A4")
`MPRnb(POGCO          ,0.0        ,""                                   ,"Coefficient for the geometry independent part of GCO")

// Gate current parameters
`MPRnb(POIGINV        ,0.0        ,"A"                                  ,"Coefficient for the geometry independent part of IGINV")
`MPRnb(PLIGINV        ,0.0        ,"A"                                  ,"Coefficient for the length dependence of IGINV")
`MPRnb(PWIGINV        ,0.0        ,"A"                                  ,"Coefficient for the width dependence of IGINV")
`MPRnb(PLWIGINV       ,0.0        ,"A"                                  ,"Coefficient for the length times width dependence of IGINV")
`MPRnb(POIGOV         ,0.0        ,"A"                                  ,"Coefficient for the geometry independent part of IGOV")
`MPRnb(PLIGOV         ,0.0        ,"A"                                  ,"Coefficient for the length dependence of IGOV")
`MPRnb(PWIGOV         ,0.0        ,"A"                                  ,"Coefficient for the width dependence of IGOV")
`MPRnb(PLWIGOV        ,0.0        ,"A"                                  ,"Coefficient for the length times width dependence of IGOV")
`MPRnb(POIGOVD        ,0.0        ,"A"                                  ,"Coefficient for the geometry independent part of IGOV for drain side")
`MPRnb(PLIGOVD        ,0.0        ,"A"                                  ,"Coefficient for the length dependence of IGOV for drain side")
`MPRnb(PWIGOVD        ,0.0        ,"A"                                  ,"Coefficient for the width dependence of IGOV for drain side")
`MPRnb(PLWIGOVD       ,0.0        ,"A"                                  ,"Coefficient for the length times width dependence of IGOV for drain side")
`MPRnb(POSTIG         ,2.0        ,""                                   ,"Coefficient for the geometry independent part of STIG")
`MPRnb(POGC2          ,0.375      ,""                                   ,"Coefficient for the geometry independent part of GC2")
`MPRnb(POGC3          ,0.063      ,""                                   ,"Coefficient for the geometry independent part of GC3")
`MPRnb(POGC2OV        ,0.375      ,""                                   ,"Coefficient for the geometry independent part of GC2OV, used only when SWIGATE=2")
`MPRnb(POGC3OV        ,0.063      ,""                                   ,"Coefficient for the geometry independent part of GC3OV, used only when SWIGATE=2")
`MPRnb(POCHIB         ,3.1        ,"V"                                  ,"Coefficient for the geometry independent part of CHIB")

// Gate-induced drain leakage (GIDL) parameters
`MPRnb(POAGIDL        ,0.0        ,"A/V^3"                              ,"Coefficient for the geometry independent part of AGIDL")
`MPRnb(PLAGIDL        ,0.0        ,"A/V^3"                              ,"Coefficient for the length dependence of AGIDL")
`MPRnb(PWAGIDL        ,0.0        ,"A/V^3"                              ,"Coefficient for the width dependence of AGIDL")
`MPRnb(PLWAGIDL       ,0.0        ,"A/V^3"                              ,"Coefficient for the length times width dependence of AGIDL")
`MPRnb(POAGIDLD       ,0.0        ,"A/V^3"                              ,"Coefficient for the geometry independent part of AGIDL for drain side")
`MPRnb(PLAGIDLD       ,0.0        ,"A/V^3"                              ,"Coefficient for the length dependence of AGIDL for drain side")
`MPRnb(PWAGIDLD       ,0.0        ,"A/V^3"                              ,"Coefficient for the width dependence of AGIDL for drain side")
`MPRnb(PLWAGIDLD      ,0.0        ,"A/V^3"                              ,"Coefficient for the length times width dependence of AGIDL for drain side")
`MPRnb(POBGIDL        ,41.0       ,"V"                                  ,"Coefficient for the geometry independent part of BGIDL")
`MPRnb(POBGIDLD       ,41.0       ,"V"                                  ,"Coefficient for the geometry independent part of BGIDL for drain side")
`MPRnb(POSTBGIDL      ,0.0        ,"V/K"                                ,"Coefficient for the geometry independent part of STBGIDL")
`MPRnb(POSTBGIDLD     ,0.0        ,"V/K"                                ,"Coefficient for the geometry independent part of STBGIDL for drain side")
`MPRnb(POCGIDL        ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CGIDL")
`MPRnb(POCGIDLD       ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CGIDL for drain side")

// Charge model parameters
`MPRnb(POCOX          ,1.0e-14    ,"F"                                  ,"Coefficient for the geometry independent part of COX")
`MPRnb(PLCOX          ,0.0        ,"F"                                  ,"Coefficient for the length dependence of COX")
`MPRnb(PWCOX          ,0.0        ,"F"                                  ,"Coefficient for the width dependence of COX")
`MPRnb(PLWCOX         ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of COX")
`MPRnb(POCGOV         ,1.0e-15    ,"F"                                  ,"Coefficient for the geometry independent part of CGOV")
`MPRnb(PLCGOV         ,0.0        ,"F"                                  ,"Coefficient for the length dependence of CGOV")
`MPRnb(PWCGOV         ,0.0        ,"F"                                  ,"Coefficient for the width dependence of CGOV")
`MPRnb(PLWCGOV        ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of CGOV")
`MPRnb(POCGOVD        ,1.0e-15    ,"F"                                  ,"Coefficient for the geometry independent part of CGOV for drain side")
`MPRnb(PLCGOVD        ,0.0        ,"F"                                  ,"Coefficient for the length dependence of CGOV for drain side")
`MPRnb(PWCGOVD        ,0.0        ,"F"                                  ,"Coefficient for the width dependence of CGOV for drain side")
`MPRnb(PLWCGOVD       ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of CGOV for drain side")
`MPRnb(POCGBOV        ,0.0        ,"F"                                  ,"Coefficient for the geometry independent part of CGBOV")
`MPRnb(PLCGBOV        ,0.0        ,"F"                                  ,"Coefficient for the length dependence of CGBOV")
`MPRnb(PWCGBOV        ,0.0        ,"F"                                  ,"Coefficient for the width dependence of CGBOV")
`MPRnb(PLWCGBOV       ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of CGBOV")
`MPRnb(POCFR          ,0.0        ,"F"                                  ,"Coefficient for the geometry independent part of CFR")
`MPRnb(PLCFR          ,0.0        ,"F"                                  ,"Coefficient for the length dependence of CFR")
`MPRnb(PWCFR          ,0.0        ,"F"                                  ,"Coefficient for the width dependence of CFR")
`MPRnb(PLWCFR         ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of CFR")
`MPRnb(POCFRD         ,0.0        ,"F"                                  ,"Coefficient for the geometry independent part of CFR for drain side")
`MPRnb(PLCFRD         ,0.0        ,"F"                                  ,"Coefficient for the length dependence of CFR for drain side")
`MPRnb(PWCFRD         ,0.0        ,"F"                                  ,"Coefficient for the width dependence of CFR for drain side")
`MPRnb(PLWCFRD        ,0.0        ,"F"                                  ,"Coefficient for the length times width dependence of CFR for drain side")

// Noise model parameters
`MPRnb(POFNT          ,1.0        ,""                                   ,"Coefficient for the geometry independent part of FNT")
`MPRnb(POFNTEXC       ,0.0        ,""                                   ,"Coefficient for the geometry independent part of FNTEXC")
`MPRnb(PLFNTEXC       ,0.0        ,""                                   ,"Coefficient for the length dependence of FNTEXC")
`MPRnb(PWFNTEXC       ,0.0        ,""                                   ,"Coefficient for the width dependence of FNTEXC")
`MPRnb(PLWFNTEXC      ,0.0        ,""                                   ,"Coefficient for the length times width dependence of FNTEXC")
`MPRnb(PONFA          ,8.0e22     ,"V^-1/m^4"                           ,"Coefficient for the geometry independent part of NFA")
`MPRnb(PLNFA          ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the length dependence of NFA")
`MPRnb(PWNFA          ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the width dependence of NFA")
`MPRnb(PLWNFA         ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the length times width dependence of NFA")
`MPRnb(PONFB          ,3.0e7      ,"V^-1/m^2"                           ,"Coefficient for the geometry independent part of NFB")
`MPRnb(PLNFB          ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the length dependence of NFB")
`MPRnb(PWNFB          ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the width dependence of NFB")
`MPRnb(PLWNFB         ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the length times width dependence of NFB")
`MPRnb(PONFC          ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of NFC")
`MPRnb(PLNFC          ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of NFC")
`MPRnb(PWNFC          ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of NFC")
`MPRnb(PLWNFC         ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of NFC")
`MPRnb(POEF           ,1.0        ,""                                   ,"Coefficient for the flicker noise frequency exponent")

// Edge transistor parameters: PSP 103.4
`MPRnb(POVFBEDGE      ,-1.0       ,"V"                                  ,"Coefficient for the geometry independent part of VFBEDGE")
`MPRnb(POSTVFBEDGE    ,0.0        ,"V/K"                                ,"Coefficient for the geometry independent part of STVFBEDGE")
`MPRnb(PLSTVFBEDGE    ,0.0        ,"V/K"                                ,"Coefficient for the length dependence of STVFBEDGE")
`MPRnb(PWSTVFBEDGE    ,0.0        ,"V/K"                                ,"Coefficient for the width dependence of STVFBEDGE")
`MPRnb(PLWSTVFBEDGE   ,0.0        ,"V/K"                                ,"Coefficient for the length times width dependence of STVFBEDGE")
`MPRnb(PODPHIBEDGE    ,0.0        ,"V"                                  ,"Coefficient for the geometry independent part of DPHIBEDGE")
`MPRnb(PLDPHIBEDGE    ,0.0        ,"V"                                  ,"Coefficient for the length dependence of DPHIBEDGE")
`MPRnb(PWDPHIBEDGE    ,0.0        ,"V"                                  ,"Coefficient for the width dependence of DPHIBEDGE")
`MPRnb(PLWDPHIBEDGE   ,0.0        ,"V"                                  ,"Coefficient for the length times width dependence of DPHIBEDGE")
`MPRnb(PONEFFEDGE     ,5.0e23     ,"m^-3"                               ,"Coefficient for the geometry independent part of NEFFEDGE")
`MPRnb(PLNEFFEDGE     ,0.0        ,"m^-3"                               ,"Coefficient for the length dependence of NEFFEDGE")
`MPRnb(PWNEFFEDGE     ,0.0        ,"m^-3"                               ,"Coefficient for the width dependence of NEFFEDGE")
`MPRnb(PLWNEFFEDGE    ,0.0        ,"m^-3"                               ,"Coefficient for the length times width dependence of NEFFEDGE")
`MPRnb(POCTEDGE       ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CTEDGE")
`MPRnb(PLCTEDGE       ,0.0        ,""                                   ,"Coefficient for the length dependence of CTEDGE")
`MPRnb(PWCTEDGE       ,0.0        ,""                                   ,"Coefficient for the width dependence of CTEDGE")
`MPRnb(PLWCTEDGE      ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CTEDGE")
`MPRnb(POBETNEDGE     ,5.0e-4     ,"m^2/V/s"                            ,"Coefficient for the geometry independent part of BETNEDGE")
`MPRnb(PLBETNEDGE     ,0.0        ,"m^2/V/s"                            ,"Coefficient for the length dependence of BETNEDGE")
`MPRnb(PWBETNEDGE     ,0.0        ,"m^2/V/s"                            ,"Coefficient for the width dependence of BETNEDGE")
`MPRnb(PLWBETNEDGE    ,0.0        ,"m^2/V/s"                            ,"Coefficient for the length times width dependence of BETNEDGE")
`MPRnb(POSTBETEDGE    ,1.0        ,""                                   ,"Coefficient for the geometry independent part of STBETEDGE")
`MPRnb(PLSTBETEDGE    ,0.0        ,""                                   ,"Coefficient for the length dependence of STBETEDGE")
`MPRnb(PWSTBETEDGE    ,0.0        ,""                                   ,"Coefficient for the width dependence of STBETEDGE")
`MPRnb(PLWSTBETEDGE   ,0.0        ,""                                   ,"Coefficient for the length times width dependence of STBETEDGE")
`MPRnb(POPSCEEDGE     ,0.0        ,""                                   ,"Coefficient for the geometry independent part of PSCEEDGE")
`MPRnb(PLPSCEEDGE     ,0.0        ,""                                   ,"Coefficient for the length dependence of PSCEEDGE")
`MPRnb(PWPSCEEDGE     ,0.0        ,""                                   ,"Coefficient for the width dependence of PSCEEDGE")
`MPRnb(PLWPSCEEDGE    ,0.0        ,""                                   ,"Coefficient for the length times width dependence of PSCEEDGE")
`MPRnb(POPSCEBEDGE    ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of PSCEBEDGE")
`MPRnb(POPSCEDEDGE    ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of PSCEDEDGE")
`MPRnb(POCFEDGE       ,0.0        ,""                                   ,"Coefficient for the geometry independent part of CFEDGE")
`MPRnb(PLCFEDGE       ,0.0        ,""                                   ,"Coefficient for the length dependence of CFEDGE")
`MPRnb(PWCFEDGE       ,0.0        ,""                                   ,"Coefficient for the width dependence of CFEDGE")
`MPRnb(PLWCFEDGE      ,0.0        ,""                                   ,"Coefficient for the length times width dependence of CFEDGE")
`MPRnb(POCFDEDGE      ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of CFDEDGE")
`MPRnb(POCFBEDGE      ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of CFBEDGE")
`MPRnb(POFNTEDGE      ,1.0        ,""                                   ,"Coefficient for the geometry independent part of FNTEDGE")
`MPRnb(PONFAEDGE      ,8.0e22     ,"V^-1/m^4"                           ,"Coefficient for the geometry independent part of NFAEDGE")
`MPRnb(PLNFAEDGE      ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the length dependence of NFAEDGE")
`MPRnb(PWNFAEDGE      ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the width dependence of NFAEDGE")
`MPRnb(PLWNFAEDGE     ,0.0        ,"V^-1/m^4"                           ,"Coefficient for the length times width dependence of NFAEDGE")
`MPRnb(PONFBEDGE      ,3.0e7      ,"V^-1/m^2"                           ,"Coefficient for the geometry independent part of NFBEDGE")
`MPRnb(PLNFBEDGE      ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the length dependence of NFBEDGE")
`MPRnb(PWNFBEDGE      ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the width dependence of NFBEDGE")
`MPRnb(PLWNFBEDGE     ,0.0        ,"V^-1/m^2"                           ,"Coefficient for the length times width dependence of NFBEDGE")
`MPRnb(PONFCEDGE      ,0.0        ,"V^-1"                               ,"Coefficient for the geometry independent part of NFCEDGE")
`MPRnb(PLNFCEDGE      ,0.0        ,"V^-1"                               ,"Coefficient for the length dependence of NFCEDGE")
`MPRnb(PWNFCEDGE      ,0.0        ,"V^-1"                               ,"Coefficient for the width dependence of NFCEDGE")
`MPRnb(PLWNFCEDGE     ,0.0        ,"V^-1"                               ,"Coefficient for the length times width dependence of NFCEDGE")
`MPRnb(POEFEDGE       ,1.0        ,""                                   ,"Coefficient for the geometry independent part of EFEDGE")

// Well proximity effect parameters
`MPRnb(POKVTHOWE      ,0.0        ,""                                   ,"Coefficient for the geometry independent part of KVTHOWE")
`MPRnb(PLKVTHOWE      ,0.0        ,""                                   ,"Coefficient for the length dependence part of KVTHOWE")
`MPRnb(PWKVTHOWE      ,0.0        ,""                                   ,"Coefficient for the width dependence part of KVTHOWE")
`MPRnb(PLWKVTHOWE     ,0.0        ,""                                   ,"Coefficient for the length times width dependence part of KVTHOWE")
`MPRnb(POKUOWE        ,0.0        ,""                                   ,"Coefficient for the geometry independent part of KUOWE")
`MPRnb(PLKUOWE        ,0.0        ,""                                   ,"Coefficient for the length dependence part of KUOWE")
`MPRnb(PWKUOWE        ,0.0        ,""                                   ,"Coefficient for the width dependence part of KUOWE")
`MPRnb(PLWKUOWE       ,0.0        ,""                                   ,"Coefficient for the length times width dependence part of KUOWE")

// `Dummy' parameters for binning-set labeling
`MPRnb(LMIN           ,0          ,"m"                                  ,"Dummy parameter to label binning set")
`MPRnb(LMAX           ,1.0        ,"m"                                  ,"Dummy parameter to label binning set")
`MPRnb(WMIN           ,0.0        ,"m"                                  ,"Dummy parameter to label binning set")
`MPRnb(WMAX           ,1.0        ,"m"                                  ,"Dummy parameter to label binning set")

//  --------------------------------------------------------------------------------------------------------------
//  Parameters that occur in both global and binning model
//  --------------------------------------------------------------------------------------------------------------

// NQS parameters
`ifdef NQSmodel
    `MPRnb(MUNQSO         ,1.0        ,""                                   ,"Relative mobility for NQS modelling")
`endif // NQSmodel

// Parasitic resistance parameters
`MPRnb(RGO            ,0.0        ,"Ohm"                                ,"Gate resistance")
`MPRcz(RINT           ,0.0        ,"Ohm m^2"                            ,"Contact resistance between silicide and ploy")
`MPRcz(RVPOLY         ,0.0        ,"Ohm m^2"                            ,"Vertical poly resistance")
`MPRcz(RSHG           ,0.0        ,"Ohm/sq"                             ,"Gate electrode diffusion sheet resistance")
`MPRnb(DLSIL          ,0.0        ,"m"                                  ,"Silicide extension over the physical gate length")
`MPRnb(RSH            ,0.0        ,"Ohm/sq"                             ,"Sheet resistance of source diffusion")
`MPRnb(RSHD           ,0.0        ,"Ohm/sq"                             ,"Sheet resistance of drain diffusion")
`MPRnb(RBULKO         ,0.0        ,"Ohm"                                ,"Bulk resistance between node BP and BI")
`MPRnb(RWELLO         ,0.0        ,"Ohm"                                ,"Well resistance between node BI and B")
`MPRnb(RJUNSO         ,0.0        ,"Ohm"                                ,"Source-side bulk resistance between node BI and BS")
`MPRnb(RJUNDO         ,0.0        ,"Ohm"                                ,"Drain-side bulk resistance between node BI and BD")

// Self heating effect parameters
`ifdef SelfHeating
    `MPRnb(RTHO           ,0.0        ,"K/W"                                ,"Geometry independent part of thermal resistance")
    `MPRnb(RTHW1          ,0.0        ,"K/W"                                ,"Width dependence of thermal resistance")
    `MPRnb(RTHW2          ,0.0        ,""                                   ,"Offset in width dependence of thermal resistance")
    `MPRnb(RTHLW          ,0.0        ,""                                   ,"Length-correction to width dependence of thermal resistance")
    `MPRnb(CTHO           ,0.0        ,"J/K"                                ,"Geometry independent part of thermal capacitance")
    `MPRnb(CTHW1          ,0.0        ,"J/K"                                ,"Width dependence of thermal capacitance")
    `MPRnb(CTHW2          ,0.0        ,""                                   ,"Offset in width dependence of thermal capacitance")
    `MPRnb(CTHLW          ,0.0        ,""                                   ,"Length-correction to width dependence of thermal capacitance")
    `MPRnb(STRTHO         ,0.0        ,""                                   ,"Temperature sensitivity of RTH")
`endif // SelfHeating

// Stress Model Parameters
`MPRcc(SAREF          ,1.0e-6     ,"m"        ,1.0e-9      ,inf         ,"Reference distance between OD-edge and poly from one side")
`MPRcc(SBREF          ,1.0e-6     ,"m"        ,1.0e-9      ,inf         ,"Reference distance between OD-edge and poly from other side")
`MPRnb(WLOD           ,0.0        ,"m"                                  ,"Width parameter")
`MPRnb(KUO            ,0.0        ,"m"                                  ,"Mobility degradation/enhancement coefficient")
`MPRcc(KVSAT          ,0.0        ,"m"        ,-1.0        ,1.0         ,"Saturation velocity degradation/enhancement coefficient")
`MPRcc(KVSATAC        ,0.0        ,"m"        ,-1.0        ,1.0         ,"Saturation velocity degradation/enhancement coefficient of charge model when SWQSAT=1")
`MPRnb(TKUO           ,0.0        ,""                                   ,"Temperature dependence of KUO")
`MPRnb(LKUO           ,0.0        ,"m^LLODKUO"                          ,"Length dependence of KUO")
`MPRnb(WKUO           ,0.0        ,"m^WLODKUO"                          ,"Width dependence of KUO")
`MPRnb(PKUO           ,0.0        ,"m^(LLODKUO+WLODKUO)"                ,"Cross-term dependence of KUO")
`MPRcz(LLODKUO        ,0.0        ,""                                   ,"Length parameter for UO stress effect")
`MPRcz(WLODKUO        ,0.0        ,""                                   ,"Width parameter for UO stress effect")
`MPRnb(KVTHO          ,0.0        ,"Vm"                                 ,"Threshold shift parameter")
`MPRnb(LKVTHO         ,0.0        ,"m^LLODVTH"                          ,"Length dependence of KVTHO")
`MPRnb(WKVTHO         ,0.0        ,"m^WLODVTH"                          ,"Width dependence of KVTHO")
`MPRnb(PKVTHO         ,0.0        ,"m^(LLODVTH+WLODVTH)"                ,"Cross-term dependence of KVTHO")
`MPRcz(LLODVTH        ,0.0        ,""                                   ,"Length parameter for VTH-stress effect")
`MPRcz(WLODVTH        ,0.0        ,""                                   ,"Width parameter for VTH-stress effect")
`MPRnb(STETAO         ,0.0        ,"m"                                  ,"Eta0 shift factor related to VTHO change")
`MPRcz(LODETAO        ,1.0        ,""                                   ,"Eta0 shift modification factor for stress effect")

// Well proximity effect Parameters
`MPRcz(SCREF          ,1.0e-6     ,"m"                                  ,"Distance between OD-edge and well edge of a reference device")
`MPRnb(WEB            ,0.0        ,""                                   ,"Coefficient for SCB")
`MPRnb(WEC            ,0.0        ,""                                   ,"Coefficient for SCC")

//  --------------------------------------------------------------------------------------------------------------
//  Other Parameters
//  --------------------------------------------------------------------------------------------------------------
`MPRnb(DTA            ,0.0        ,"K"                                  ,"Temperature offset w.r.t. ambient temperature")

