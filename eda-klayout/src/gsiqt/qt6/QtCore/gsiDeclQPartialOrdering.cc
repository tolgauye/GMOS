
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2025 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQPartialOrdering.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QPartialOrdering>
#include "gsiQt.h"
#include "gsiQtCoreCommon.h"
#include <memory>

// -----------------------------------------------------------------------
// class QPartialOrdering

//  bool ::operator==(QPartialOrdering p1, QPartialOrdering p2)
static bool op_QPartialOrdering_operator_eq__eq__4012(QPartialOrdering *_self, QPartialOrdering p2) {
  return operator==(*_self, p2);
}

//  bool ::operator!=(QPartialOrdering p1, QPartialOrdering p2)
static bool op_QPartialOrdering_operator_excl__eq__4012(QPartialOrdering *_self, QPartialOrdering p2) {
  return operator!=(*_self, p2);
}


namespace gsi
{

static gsi::Methods methods_QPartialOrdering () {
  gsi::Methods methods;
  methods += gsi::method_ext("==", &::op_QPartialOrdering_operator_eq__eq__4012, gsi::arg ("p2"), "@brief Operator bool ::operator==(QPartialOrdering p1, QPartialOrdering p2)\nThis is the mapping of the global operator to the instance method.");
  methods += gsi::method_ext("!=", &::op_QPartialOrdering_operator_excl__eq__4012, gsi::arg ("p2"), "@brief Operator bool ::operator!=(QPartialOrdering p1, QPartialOrdering p2)\nThis is the mapping of the global operator to the instance method.");
  return methods;
}

gsi::Class<QPartialOrdering> decl_QPartialOrdering ("QtCore", "QPartialOrdering",
  methods_QPartialOrdering (),
  "@qt\n@brief Binding of QPartialOrdering");


GSI_QTCORE_PUBLIC gsi::Class<QPartialOrdering> &qtdecl_QPartialOrdering () { return decl_QPartialOrdering; }

}

