<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category/>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>true</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>ruby</interpreter>
 <dsl-interpreter-name/>
 <text>
module D25

  # Installs the home menu entries (needs to be done on autorun, not autorun-early)

  if RBA::Application::instance &amp;&amp; RBA::Application::instance.main_window

    cat = "d25"
    name = "2.5d"

    mw = RBA::Application::instance.main_window
    mw.menu.insert_menu("tools_menu.verification_group+", "d25", "2.5d View")

    @new_action = RBA::Action::new
    @new_action.title = "New #{name} Script"
    @new_action.on_triggered do
      mw.show_macro_editor(cat, true) 
    end

    mw.menu.insert_item("tools_menu.#{cat}.end", "new_script", @new_action)

    @edit_action = RBA::Action::new
    @edit_action.title = "Edit #{name} Script"
    @edit_action.on_triggered do
      mw.show_macro_editor(cat, false) 
    end

    mw.menu.insert_item("tools_menu.#{cat}.end", "edit_script", @edit_action)

    @open_action = RBA::Action::new
    @open_action.title = "Open Window"
    @open_action.on_triggered do
      if ! RBA::LayoutView::current
        RBA::MessageBox::critical("Error", "No layout loaded for running 2.5d view on", RBA::MessageBox::Ok)
      else 
        RBA::LayoutView::current.open_d25_view
      end
    end

    mw.menu.insert_item("tools_menu.#{cat}.end", "open_window", @open_action)

  end

end
</text>
</klayout-macro>

